{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww17660\viewh15420\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Random Marble Generator Documentation\
\
The purpose of this project was to deepen my understanding of procedurally generated materials in 3D software, and to perfect procedural marble to the point of being able to have new, convincing, and unique marble materials at the press of a button. All of the materials shown on this page were randomly generated, including the colors. \
\
By restricting the range of colors from which the computer could randomly choose, I was able to generated more natural looking marble materials. Still random, but more applicable when modeling real world scenes. \
\
All of the marble materials you see on this page are randomly generated using Blender and an add-on called animation nodes. Blender\'92s node editor allows you to generate and combine texture maps. The characteristics of these textures are controlled by parameters like \'93scale,\'94 \'93detail\'94 and \'93distortion.\'94 These texture maps can be used to control the mixing of different shaders. A shader tells Blender how to render a particular surface - I think of it as the substance out of which the object is made. Jacques Lucke\'92s Animation nodes are capable of generating random numbers and controlling the parameters in the node editor base on those random numbers. I wired the frame numbers to the seed value of the random number generators in the Animation nodes allowing me to have a new random texture for every frame. \
\
\
\
\
This project was born out of my 100 days of textures project. I knew that over the course of the project I would end up with a better understanding of creating procedural marble textures (\'93procedural\'94 meaning generated by the computer rather that using a photograph as a texture map). \
\
My first big step in achieving procedural marble was to plug the output of one generated texture, into the parameters of another generated texture. I discover that just by plugging a noise map into the scale socket of another noise map, a much more complex, foliated pattern could be achieved. \
\
By day 50 of the textures project I had played around with different procedural texture maps enough to know the good combinations for obtaining visually-pleasing marble-esque patterns. With different colors, roiling foliation and bright swimming dolomite deposits. Now it was time to make it truly generative.\
\
I wanted the satisfaction of being able to press a button and have Blender spit out a beautiful, convincing, and unique marble texture. when I had the ability to choose every parameter of the texture as well as every color therein, I would fall into aesthetic ruts - choosing my favorite colors and patterns. The glory of marble in the real world is that you have very little control over its appearance.\
\
Being able to randomly generate marble took the burden of control off of my shoulders and I could pick my texture the way we choose marble in the real world, by going through a selection of specimens with only our gut aesthetic instincts. \'93I like this\'85.\'94 \'93not this one\'85 show me something else\'94 is now as easy as advancing to the next frame.\
\
}